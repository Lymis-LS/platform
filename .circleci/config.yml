docker-sign-in: &docker-sign-in
  name: login to doker remote
  command: |
    docker login \
      --username $DOCKER_USER \
      --password $DOCKER_PASS

mapping-var-env: &mapping-var-env
  name: define var with branch
  command: |
    case "$CIRCLE_BRANCH" in
      "master") ENV=prod
        ;;
      "release") ENV=next
        ;;
      "develop") ENV=staging
        ;;
      *) ENV=dev_$(echo $CIRCLE_BRANCH | tr "/" "-")
        ;;
    esac
    echo 'export ENV='$ENV >> $BASH_ENV

version: 2.1

references:
  container_config: &container_config
    docker:
      - image: circleci/node:10
    working_directory: /home/circleci/repo

jobs:
  test:
    <<: *container_config
    steps:
      - checkout
      - restore_cache: #Download and cache dependencies
          keys:
            - v3-dependencies-npm-{{ checksum "package-lock.json" }}
            - v3-dependencies-npm

      - run: npm ci

      - run: npm test

      - save_cache:
          key: v3-dependencies-npm-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
            - ~/.cache

  build_and_push:
    <<: *container_config
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys
      - run: *mapping-var-env
      - run: *docker-sign-in
      - run:
          name: backup previous image
          command: |
            if export DOCKER_CLI_EXPERIMENTAL=enabled && docker manifest inspect "bimdata/platform_back:prev-$ENV" > /dev/null; then
              docker pull "bimdata/platform_back:$ENV"
              docker image tag "bimdata/platform_back:$ENV" "bimdata/platform_back:prev-$ENV"
              docker push "bimdata/platform_back:prev-$ENV"
            fi
      - run:
          name: prepare build
          command: |
            # We can't mount volumes in docker in circleci (https://discuss.circleci.com/t/why-circleci-2-0-does-not-support-mounting-folders/11605/14)
            # so we create a container, copy files in it then start it
            docker create \
              --name deployment \
              --volume /var/run/docker.sock:/var/run/docker.sock \
              bimdata/deployment:latest
            docker cp /home/circleci/repo deployment:/var/repo
            docker start deployment
      - run:
          name: build docker image
          command: |
            docker exec -e ANSIBLE_VAULT_PASSWD deployment \
              ansible-playbook \
              --inventory-file inventories/$ENV \
              --tags platform \
              --extra-vars '{"context_dir":"/var/repo","ansible_ssh_private_key_file":"./files/deploy_rsa"}' \
              --user deploy \
              build.yml
      - run:
          name: push new image
          command: docker push "bimdata/platform:$ENV"
      - run:
          name: push latest tag image
          command: |
            if [[ "$CIRCLE_BRANCH" == "develop" ]]; then
              docker tag "bimdata/platform:$ENV" bimdata/platform:latest
              docker push bimdata/platform:latest
            fi

  deploy:
    <<: *container_config
    steps:
      - checkout
      - setup_remote_docker
      - run: *docker-sign-in
      - run: *mapping-var-env
      - run:
          name: ansible deployment
          command: |
            docker run -e ANSIBLE_VAULT_PASSWD bimdata/deployment:latest \
              ansible-playbook \
              --inventory-file inventories/$ENV \
              --tags platform \
              --extra-vars "ansible_ssh_private_key_file=./files/deploy_rsa" \
              --user deploy  \
              deploy.yml

workflows:
  test_and_deploy:
    jobs:
      - test
      - deploy_docker_dev:
          type: approval
          filters:
            branches:
              ignore:
                - master
                - release
                - develop
      - build_and_push:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - release
                - develop
      - deploy:
          requires:
            - build_and_push
      - build_and_push:
          name: build_and_push_docker_dev
          requires:
            - deploy_docker_dev
